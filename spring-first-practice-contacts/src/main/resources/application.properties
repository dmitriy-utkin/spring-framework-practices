spring.profiles.active=default


app.contacts.iopath.output=src/main/java/com/contacts_practiceOne/out/contacts.txt
app.contacts.iopath.input=src/main/resources/mock_data_practice_1.8.csv

app.contacts.launcher.appName=Contacts
app.contacts.launcher.greetings=Welcome to "Contacts" application
app.contacts.launcher.baseInstruction=This is a main page of application. Here you can: \
                                    \n -> Print all contacts (1) \
                                    \n -> Add new contact (2) \
                                    \n -> Delete contact by email (3) \
                                    \n -> And stop af application - "4"
app.contacts.launcher.invalidRequestMainPage=Incorrect request, try again
app.contacts.launcher.exitApp=To stop this application or launched module, please press "4"
app.contacts.launcher.finalInputFormat=Correct format: Ivanov Ivan Ivanovich; +79198144563; example@mail.ru
app.contacts.launcher.fullNameFormat=Full name format: Ivanov Ivan Ivanovich;
app.contacts.launcher.phoneNumberFormat=Phone number format: +79198144563 or 89198144563
app.contacts.launcher.emailFormat=Email format: example@mail.ru

app.contacts.regex.fullName=^[a-zA-Z]*( [a-zA-Z]*){1,2}$
app.contacts.regex.phoneNumber=(8|\\+7){1}[0-9]{10}
app.contacts.regex.email=[a-z0-9._]+@[a-z0-9]+.[a-z]{2,4}

app.contacts.error.options.emptyContactBook=Contact book is empty
app.contacts.error.options.invalidFullInfo=Invalid full info input, correct format: Ivanov Ivan Ivanovich; +79198144563; example@mail.ru
app.contacts.error.options.invalidFullName=Invalid full name, correct format: Ivanov Ivan Ivanovich
app.contacts.error.options.invalidPhoneNumber=Invalid phone number, correct format: +79198144563 or 89198144563
app.contacts.error.options.invalidEmail=Invalid email, correct format: example@mail.ru
app.contacts.error.options.alreadyExist=Contact with the same email is already exist
app.contacts.error.options.emailNotFound=Contact with email like this is not found